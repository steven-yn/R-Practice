mutate(pct= round(n/tot_group* 100, 2))
head(region_ageg)
ggplot(data = region_ageg , aes(x = region, y= pct, fill = ageg)) +
geom_col()+
coord_flip()
list_order_old <- region_ageg %>%
filter(ageg == "old") %>%
arrange(pct)
list_order_old
order <- list_order_old$region
order
region_ageg
ggplot(data = region_ageg, aes(x = region, y= pct , fill = ageg)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits = order)
class(region_ageg$ageg)
levels(region_ageg$ageg)
region_ageg$ageg <- factor(region_ageg$ageg,
level = c("old","middle","young"))
class(region_ageg$ageg)
levels(region_ageg$ageg)
ggplot(data = region_ageg, aes( x= region, y = pct, fill = ageg)) +
geom_col()+
coord_flip() +
scale_x_discrete(limits = order)
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
raw_welfare <- read.spss(file = "Koweps_hpc10_2015_beta1.sav",
to.data.frame = T)
welfare <- raw_welfare
welfare <- rename(welfare,
health = h10_med2,
test = h10_med8) %>%
select(health, test)
head(welfare)
class(welfare$health)
table(welfare$health)
welfare$health <- ifelse(welfare$health == 1, "verygood",
ifelse(welfare$health == 2, "good",
ifelse(welfare$health == 3, "soso",
ifelse(welfare$health == 4, "bad", "verybad"))))
welfare$health <- factor(welfare$health, level = c("verygood","good","soso","bad","verybad"))
class(welfare$health)
table(welfare$health)
class(welfare$test)
table(welfare$test)
test_health <- welfare %>%
group_by(health) %>%
summarise(mean_test = mean(test))
test_health
ggplot(data = test_health, aes(x= health, y = mean_test)) +
geom_col()
class(welfare$birth)
summary(welfare$birth)
qplot(welfare$birth)
summary(welfare$birth)
table(is.na(welfare$birth))
welfare$birth <- ifelse(welfare$birth == 9999, NA, welfare$birth)
table(is.na(welfare$birth))
welfare$age <- 2015-welfare$birth + 1
summary(welfare$age)
qplot(welfare$age)
welfare$age
age_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
age_income
ggplot(data = age_income , aes(x= age, y= mean_income)) +geom_line()
ggplot(data = sex_income , aes(x= ageg, y= mean_income, fill=sex)) + geom_col() + scale_x_discrete(limits = c("young","middle","old"))
ggplot(data = sex_income, aes(x=ageg, y= mean_income , fill = sex)) +geom_col( position = "dodge") + scale_x_discrete(limits = c("young","middle","old"))
sex_age <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
head(sex_age)
ggplot(data = sex_age, aes(x= age, y= mean_income, col = sex)) + geom_line()
job_male <- welfare %>%
filter(!is.na(job) & sex == "male") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_male
job_female <- welfare %>%
filter(!is.na(job) & sex == "female") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_female
ggplot(data = job_male, aes(x = reorder(job, n ), y= n )) +
geom_col()+
coord_flip()
ggplot(data = job_female , aes(x= reorder(job, n), y = n)) +
geom_col()+
coord_flip()
class(welfare$religion)
table(welfare$religion)
welfare$religion <- ifelse(welfare$religion == 1 , "yes" ,"no")
table(welfare$religion)
qplot(welfare$religion)
class(welfare$marriage)
table(welfare$marriage)
welfare$group_marriage <- ifelse(welfare$marriage == 1 , "marriage",
ifelse(welfare$marriage == 3, "divorce", NA))
table(welfare$group_marriage)
table(is.na(welfare$group_marriage))
qplot(welfare$group_marriage)
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n  = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group *100, 1))
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion) %>%
mutate(pct = round(n/sum(n) * 100, 1))
religion_marriage
divorce <- religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(religion, pct)
divorce
ggplot(data = divorce, aes(x= religion , y= pct)) + geom_col()
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group * 100, 1))
ageg_marriage
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(ageg, group_marriage) %>%
group_by(ageg) %>%
mutate(pct = round(n/sum(n)*100, 1))
ageg_marriage
ageg_divorce <- ageg_marriage %>%
filter(ageg != "young" & group_marriage == "divorce" ) %>%
select(ageg, pct)
ageg_divorce
ggplot(data = ageg_divorce , aes(x= ageg, y= pct)) + geom_col()
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "young") %>%
group_by(ageg, religion, group_marriage ) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group * 100, 1))
ageg_religion_marriage
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "young") %>%
count(ageg, religion, group_marriage) %>%
group_by(ageg, religion) %>%
mutate(pct = round(n/sum(n)*100, 1))
ageg_religion_marriage
df_divorce <- ageg_religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(ageg, religion, pct)
df_divorce
ggplot(data = df_divorce, aes(x = ageg, y= pct, fill = religion)) +
geom_col(position = "dodge")
class(welfare$religion)
table(welfare$religion)
welfare$religion <- ifelse(welfare$religion == 1 , "yes" ,"no")
table(welfare$religion)
qplot(welfare$religion)
class(welfare$marriage)
table(welfare$marriage)
welfare$group_marriage <- ifelse(welfare$marriage == 1 , "marriage",
ifelse(welfare$marriage == 3, "divorce", NA))
table(welfare$group_marriage)
table(is.na(welfare$group_marriage))
qplot(welfare$group_marriage)
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n  = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group *100, 1))
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion) %>%
mutate(pct = round(n/sum(n) * 100, 1))
religion_marriage
divorce <- religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(religion, pct)
divorce
ggplot(data = divorce, aes(x= religion , y= pct)) + geom_col()
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group * 100, 1))
ageg_marriage
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(ageg, group_marriage) %>%
group_by(ageg) %>%
mutate(pct = round(n/sum(n)*100, 1))
ageg_marriage
ageg_divorce <- ageg_marriage %>%
filter(ageg != "young" & group_marriage == "divorce" ) %>%
select(ageg, pct)
ageg_divorce
ggplot(data = ageg_divorce , aes(x= ageg, y= pct)) + geom_col()
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "young") %>%
group_by(ageg, religion, group_marriage ) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group * 100, 1))
ageg_religion_marriage
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "young") %>%
count(ageg, religion, group_marriage) %>%
group_by(ageg, religion) %>%
mutate(pct = round(n/sum(n)*100, 1))
ageg_religion_marriage
df_divorce <- ageg_religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(ageg, religion, pct)
df_divorce
ggplot(data = df_divorce, aes(x = ageg, y= pct, fill = religion)) +
geom_col(position = "dodge")
# 데이터 분석에 필요한 패키지 설치
install.packages("ggplot2")
install.packages("foreign")
install.packages("dplyr")
install.packages("readxl")
install.packages("plotly")
# 설치한 패키지 실행하기
library(foreign)
library(ggplot2)
library(dplyr)
library(readxl)
library(plotly)
# 데이터를 불러오기(2015년 한국 성별에 따른 임금 데이터)
raw_welfare <- read.spss(file= "Koweps_hpc10_2015_beta1.sav",to.data.frame=T)
# 데이터 정제시 만약을 위해 복사본 만들기
welfare <- raw_welfare
# 데이터 확인
welfare
head(welfare) # 맨 위부터 확인
tail(welfare) # 맨 아래부터 확인
View(welfare) # 테이블 확인
dim(welfare)
str(welfare)
summary(welfare)
# welfare의 변수(속성)명 변경!
welfare <- rename(welfare,
sex = h10_g3,
birth = h10_g4,
marriage = h10_g10,
religion = h10_g11,
income = p1002_8aq1,
code_job = h10_eco9,
code_region = h10_reg7)
str(welfare)
# sas파일을 불러오기 위해 sas7bdat 패키지 불러오기
# koweps_h11_2016_beta1.sas파일 불러오기기
install.packages("sas7bdat")
library(sas7bdat)
sas_welfare <- read.sas7bdat(file= "koweps_h11_2016_beta1.sas7bdat")
# 복사본 만들기
welfare_sas <- sas_welfare
# (sex(성별)의 값이 1이라면 male로 아니면 female를 수정)
welfare$sex <- ifelse(welfare$sex == 1,"male","female")
str(welfare)
# 결측치 확인
table(is.na(welfare$sex))
# 성별 비율 시각화
qplot(welfare$sex)
# ------------------------------------------------------------------------------
# 연령대 및 성별 월급차이 분석하기
# 전처리(이상치 확인)
welfare$income <- ifelse(welfare$income %in% c(0,9999),NA,welfare$income)
table(is.na(welfare$income))
# 파생변수 만들기(age변수)
welfare$age <- 2015-welfare$birth + 1
summary(welfare$age) # age 상세확인
qplot(welfare$age) # 시각화
# 파생변수 만들기(age값에 따른 ageg변수)
welfare <- welfare %>%
mutate(ageg = ifelse(age < 30,"young",
ifelse(age <= 59,"middle",
"old")))
# 연령대 및 성별 월급 평균표 만들기
# income 변수에 결측치가 없고 ageg변수와 sex변수를 그룹화하여
# 연령대 및 성별에 따른 평균값을 구한다.
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg,sex) %>%
summarise(mean_income = mean(income))
sex_income
# 그래프 만들기(시각화1)
ggplot(data = sex_income,aes(x=ageg,y=mean_income,fill=sex)) +
geom_col() +
scale_x_discrete(limits = c("young","middle","old"))
# 그래프 만들기(시각화2)
ggplot(data = sex_income,aes(x=ageg,y=mean_income,fill=sex)) +
geom_col(position = "dodge") +
scale_x_discrete(limits = c("young","middle","old"))
# 그래프 만들기(시각화3) - 인터럽트 그래프
sex_income_interactive1 <- ggplot(data = sex_income,aes(x=ageg,y=mean_income,col=sex)) +
geom_point()
sex_income_interactive1
ggplotly(sex_income_interactive1)
# 그래프 만들기(시각화4) - 인터럽트 그래프
sex_income_interactive2 <- ggplot(data = sex_income,aes(x=ageg,y=mean_income,fill=sex)) +
geom_col(position="dodge") +
scale_x_discrete(limits = c("young","middle","old"))
sex_income_interactive2
ggplotly(sex_income_interactive2)
# ------------------------------------------------------------------------------
# 직업별 월급차이 분석하기
# 직업목록 불러오기
list_job <- read_excel("Koweps_Codebook.xlsx",col_names=T,sheet = 2)
head(list_job)
tail(list_job)
# 월급Data 와 직업목록을 조인(join)
# code_job 변수를 기준으로 조인
welfare <- left_join(welfare,list_job,id = "code_job")
head(welfare)
View(welfare)
# 전처리
welfare %>%
filter(!is.na(code_job)) %>%
select(code_job,job) %>%
head(10)
# 직업별 월급 평균표 만들기
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income))
head(job_income)
#내림차순으로 정렬 뒤 상위 10개만 추출
top10 <- job_income %>%
arrange(desc(mean_income)) %>%
head(10)
top10
# 추출한 상위10개 직업군으로 그래프 만들기
ggplot(data=top10,aes(x=reorder(job,mean_income),y=mean_income)) +
geom_col() + coord_flip()
# 인터렉티브_그래프로 표현
p <- ggplot(data=top10,aes(x=job,y=mean_income)) +
geom_col(position = "dodge") + coord_flip()
ggplotly(p)
qplot(welfare$sex)
qplot(welfare$sex)
qplot(welfare$age) # 시각화
ggplotly(sex_income_interactive1)
# 데이터를 불러오기(2015년 한국 성별에 따른 임금 데이터)
raw_welfare <- read.spss(file= "Koweps_hpc10_2015_beta1.sav",to.data.frame=T)
# 데이터 정제시 만약을 위해 복사본 만들기
welfare <- raw_welfare
# 데이터 확인
welfare
head(welfare) # 맨 위부터 확인
tail(welfare) # 맨 아래부터 확인
View(welfare) # 테이블 확인
dim(welfare)
str(welfare)
summary(welfare)
# welfare의 변수(속성)명 변경!
welfare <- rename(welfare,
sex = h10_g3,
birth = h10_g4,
marriage = h10_g10,
religion = h10_g11,
income = p1002_8aq1,
code_job = h10_eco9,
code_region = h10_reg7)
str(welfare)
# sas파일을 불러오기 위해 sas7bdat 패키지 불러오기
# koweps_h11_2016_beta1.sas파일 불러오기기
install.packages("sas7bdat")
library(sas7bdat)
sas_welfare <- read.sas7bdat(file= "koweps_h11_2016_beta1.sas7bdat")
# 복사본 만들기
welfare_sas <- sas_welfare
# (sex(성별)의 값이 1이라면 male로 아니면 female를 수정)
welfare$sex <- ifelse(welfare$sex == 1,"male","female")
str(welfare)
# 결측치 확인
table(is.na(welfare$sex))
# 성별 비율 시각화
qplot(welfare$sex)
install.packages("sas7bdat")
# 연령대 및 성별 월급차이 분석하기
# 전처리(이상치 확인)
welfare$income <- ifelse(welfare$income %in% c(0,9999),NA,welfare$income)
table(is.na(welfare$income))
# 파생변수 만들기(age변수)
welfare$age <- 2015-welfare$birth + 1
summary(welfare$age) # age 상세확인
qplot(welfare$age) # 시각화
ggplot(data = sex_income,aes(x=ageg,y=mean_income,fill=sex)) +
geom_col() +
scale_x_discrete(limits = c("young","middle","old"))
ggplot(data = sex_income,aes(x=ageg,y=mean_income,fill=sex)) +
geom_col(position = "dodge") +
scale_x_discrete(limits = c("young","middle","old"))
sex_income_interactive1 <- ggplot(data = sex_income,aes(x=ageg,y=mean_income,col=sex)) +
geom_point()
sex_income_interactive1
ggplotly(sex_income_interactive1)
sex_income_interactive2 <- ggplot(data = sex_income,aes(x=ageg,y=mean_income,fill=sex)) +
geom_col(position="dodge") +
scale_x_discrete(limits = c("young","middle","old"))
sex_income_interactive2
ggplotly(sex_income_interactive2)
ggplot(data = sex_income,aes(x=ageg,y=mean_income,fill=sex)) +
geom_col() +
scale_x_discrete(limits = c("young","middle","old"))
ggplot(data = sex_income,aes(x=ageg,y=mean_income,fill=sex)) +
geom_col(position = "dodge") +
scale_x_discrete(limits = c("young","middle","old"))
ggplot(data = sex_income,aes(x=ageg,y=mean_income,fill=sex)) +
geom_col() +
scale_x_discrete(limits = c("young","middle","old"))
# 그래프 만들기(시각화2)
ggplot(data = sex_income,aes(x=ageg,y=mean_income,fill=sex)) +
geom_col(position = "dodge") +
scale_x_discrete(limits = c("young","middle","old"))
# 데이터를 불러오기(2015년 한국 성별에 따른 임금 데이터)
raw_welfare <- read.spss(file= "Koweps_hpc10_2015_beta1.sav",to.data.frame=T)
# 데이터 정제시 만약을 위해 복사본 만들기
welfare <- raw_welfare
# 데이터 확인
welfare
head(welfare) # 맨 위부터 확인
tail(welfare) # 맨 아래부터 확인
View(welfare) # 테이블 확인
dim(welfare)
str(welfare)
summary(welfare)
# welfare의 변수(속성)명 변경!
welfare <- rename(welfare,
sex = h10_g3,
birth = h10_g4,
marriage = h10_g10,
religion = h10_g11,
income = p1002_8aq1,
code_job = h10_eco9,
code_region = h10_reg7)
str(welfare)
# sas파일을 불러오기 위해 sas7bdat 패키지 불러오기
# koweps_h11_2016_beta1.sas파일 불러오기기
install.packages("sas7bdat")
library(sas7bdat)
sas_welfare <- read.sas7bdat(file= "koweps_h11_2016_beta1.sas7bdat")
# 복사본 만들기
welfare_sas <- sas_welfare
# (sex(성별)의 값이 1이라면 male로 아니면 female를 수정)
welfare$sex <- ifelse(welfare$sex == 1,"male","female")
str(welfare)
# 결측치 확인
table(is.na(welfare$sex))
# 성별 비율 시각화
qplot(welfare$sex)
# 연령대 및 성별 월급차이 분석하기
# 전처리(이상치 확인)
welfare$income <- ifelse(welfare$income %in% c(0,9999),NA,welfare$income)
table(is.na(welfare$income))
# 파생변수 만들기(age변수)
welfare$age <- 2015-welfare$birth + 1
summary(welfare$age) # age 상세확인
qplot(welfare$age) # 시각화
# ------------------------------------------------------------------------------
# 파생변수 만들기(age값에 따른 ageg변수)
welfare <- welfare %>%
mutate(ageg = ifelse(age < 30,"young",
ifelse(age <= 59,"middle",
"old")))
# 연령대 및 성별 월급 평균표 만들기
# income 변수에 결측치가 없고 ageg변수와 sex변수를 그룹화하여
# 연령대 및 성별에 따른 평균값을 구한다.
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg,sex) %>%
summarise(mean_income = mean(income))
sex_income
# 그래프 만들기(시각화1)
ggplot(data = sex_income,aes(x=ageg,y=mean_income,fill=sex)) +
geom_col() +
scale_x_discrete(limits = c("young","middle","old"))
# 그래프 만들기(시각화2)
ggplot(data = sex_income,aes(x=ageg,y=mean_income,fill=sex)) +
geom_col(position = "dodge") +
scale_x_discrete(limits = c("young","middle","old"))
install.packages("sas7bdat")
welfare$income <- ifelse(welfare$income %in% c(0,9999),NA,welfare$income)
table(is.na(welfare$income))
# 파생변수 만들기(age변수)
welfare$age <- 2015-welfare$birth + 1
summary(welfare$age) # age 상세확인
qplot(welfare$age) # 시각화
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg,sex) %>%
summarise(mean_income = mean(income))
sex_income
